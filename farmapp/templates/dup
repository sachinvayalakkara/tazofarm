{% extends "menu.html"%}
{% block content %}
<center> <h2 style="color: black;">Rack</h2></center>
<br>
<a href="/farmapp/addrack"><button class="btn glyphicon glyphicon-plus" id="addbutton"></button></a>
<br><br>
<div >
    <div class="container-fixed" data-ng-app="myApp" data-ng-controller="myCtrl">

        <div class="row">
          <div class="col-md-8">
            Search:
            <input type="text" class="search" data-ng-model="table" />
          </div>
          <div class="col-md-4">
           
          </div>
        </div>
        <br/>
        <table class="col-md-12">
          <thead>
          <tr>
            <th>Rack id</th>
            <th>Rack Name</th>
          
            <th>QR Code</th>
            <th>Active</th>
            
          </tr>
        </thead>
        <tbody>
          {% for obj in rackdata %}
          <tr data-ng-repeat="customer in people | filter: table">
           
            <td>{{obj.id}}</td>
            <td>{{obj.rack_name}}</td>
            <td>{{obj.qrcode}}</td>
            <td>
              <form method="GET">
              <button class="btn btn-info" value="{{obj.id}}" name="edit">Edit</button>
              <button class="btn btn-info" value="{{obj.id}}" name="delete">Delete</button>
            </form>

            </td>
          </tr>
          {% endfor %}
        </tbody>


        </table>
        <div data-pagination="" data-num-pages="numPages()" data-current-page="currentPage" data-max-size="maxSize" data-boundary-links="true"></div>
      </div>
</div>
<script>
    <script>
    var app = angular.module('myApp', ['ui.bootstrap']);
app.controller('myCtrl', function($scope) {
  $scope.customers = [{
    
  }],
  $scope.people=[],
  $scope.currentPage = 1,
  $scope.numPerPage = 5,
  $scope.maxSize = 5;
  
  
  
  $scope.numPages = function () {
    return Math.ceil($scope.customers.length / $scope.numPerPage);
  };
  
  $scope.$watch('currentPage + numPerPage', function() {
    var begin = (($scope.currentPage - 1) * $scope.numPerPage)
    , end = begin + $scope.numPerPage;
    
    $scope.people = $scope.customers.slice(begin, end);
  });
  
  
});
</script>

<script>
  
    $(document).ready(function(){
        $('.delete_btn').click(function(e){
            service_id = e.target.id;
            $.ajax({
               url:'http://127.0.0.1:8000/farmapp/deleterack',
               type:'POST',
               data:{
                   id:id,
                   csrfmiddlewaretoken: '{{ csrf_token }}'
               },
               success:function(res){
                   alert(res);
               },
               error:function(err){
                   console.log(err);
               }
            });

        });
    });
</script>



{% endblock %}



drop
<div class="container"> 
    <div class="row">
        <div class="col-lg-12">
    <nav class="navbar navbar-inverse"> 
        <div class="container-fluid"> 
          <div class="navbar-header"> 
            <a class="navbar-brand" href="#">Tazofarm</a> 
          </div> 
          <ul class="nav navbar-nav"> 
            <li class="active"><a href="#">Home</a></li> 
            <li><a href="#">Page 1</a></li> 
            <li><a href="#">Page 2</a></li> 
          </ul> 
          <ul class="nav navbar-nav navbar-right"> 
             
            <li><a href="#"><span class="glyphicon glyphicon-log-in"></span> Logout</a></li> 
          </ul> 
        </div> 
      </nav>
      </div>
    </div>
    <div class="row">
    <div class="col-lg-12 ">
        <div class="col-lg-6 magnify">
  
    <div class=" panel-default" id="draggable"> 
      <div class="panel-heading">RACK</div> 
      <div class="panel-body">
          <div class="col-lg-4">
  <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
      <thead>
          <tr>
            <th>Rack Name</th>
            <th>Bay id</th>
            <th>Bay Name</th>
          
            <th>QR Code</th>
            
          </tr>
        </thead>
        <tbody>
          {% for obj in baydata %}
          <tr data-ng-repeat="customer in people | filter: table">
            <td>{{obj.fk_rackid.rack_name}}</td>
            <td>{{obj.id}}</td>
            <td>{{obj.bay_name}}</td>
            <td>{{obj.qrcode}}</td>
            
          </tr>
          {% endfor %}
        </tbody>
  </table>
</div>

      </div>
      </div> 
    </div> 
    <div class="col-lg-6 magnify">
  <div class="panel panel-default"> 
      <div class="panel-heading">BAY</div> 
      <div class="panel-body"></div> 
    </div> 
    </div>
    <div class="col-lg-6 magnify">
  
    <div class="panel panel-default"> 
      <div class="panel-heading">VENDOR</div> 
      <div class="panel-body"></div> 
    </div> 
    </div>
  </div> 
</div> 
 </div>
 <script>
     $('#draggable').draggable();
 </script>


 //////////////clone////////////

 //   $("input.tr_clone_add").on('click', function() { 
//     var $tr    = $(this).closest('.tr_clone'); 
//     var $clone = $tr.clone(); 
//     // $clone.find(':text').val('');- to clear cloned field text
//     $tr.after($clone); 
//     // $(".tr_clone").clone().appendTo(".tr_clone");
// });
//     }); -->
// <!-- // </script> -->

// <!-- <script> -->
  
// var regex = /^(.*)(\d)+$/i;
// var cindex = 1; 
// $("input.tr_clone_add").on('click',function() { 
//   var $tr    = $(this).closest('.tr_clone'); 
//   var $clone = $tr.clone(true); 
//   cindex++; 
//   $clone.find(':text').val(); 
//   $clone.attr('id', 'id'+(cindex) ); //update row id if required 
//   //update ids of elements in row 
//   $clone.find("*").each(function() { 
//           var id = this.id || ""; 
//           var match = id.match(regex) || []; 
//           if (match.length == 3) { 
//               this.id = match[1] + (cindex); 
//           } 
//   }); 
//   $tr.after($clone); 
// });
    
    
//   </script>


/////////table property ////

// $(document).ready(function() {
//     $("#add_row").on("click", function() {
//         // Dynamic Rows Code
        
//         // Get max row id and set new id
//         var newid = 0;
//         $.each($("#tab_logic tr"), function() {
//             if (parseInt($(this).data("id")) > newid) {
//                 newid = parseInt($(this).data("id"));
//             }
//         });
//         newid++;
        
//         var tr = $("<tr></tr>", {
//             id: "addr"+newid,
//             "data-id": newid
//         });
        
//         // loop through each td and create new elements with name of newid
//         $.each($("#tab_logic tbody tr:nth(0) td"), function() {
//             var td;
//             var cur_td = $(this);
            
//             var children = cur_td.children();
            
//             // add new td and element if it has a nane
//             if ($(this).data("name") !== undefined) {
//                 td = $("<td></td>", {
//                     "data-name": $(cur_td).data("name")
//                 });
//  var c = $(cur_td).find($(children[0]).prop('tagName')).clone().val("");
//                 c.attr("name", $(cur_td).data("name") + newid);
//                 c.appendTo($(td));
//                 td.appendTo($(tr));
//             } else {
//                 td = $("<td></td>", {
//                     'text': $('#tab_logic tr').length
//                 }).appendTo($(tr));
//             }
//         });
//  $(tr).appendTo($('#tab_logic'));
        
//         $(tr).find("td button.row-remove").on("click", function() {
//              $(this).closest("tr").remove();
//         });
// });
//  var fixHelperModified = function(e, tr) {
//         var $originals = tr.children();
//         var $helper = tr.clone();
    
//         $helper.children().each(function(index) {
//             $(this).width($originals.eq(index).width())
//         });
        
//         return $helper;
//     };
  
//     $(".table-sortable tbody").sortable({
//         helper: fixHelperModified      
//     }).disableSelection();

//     $(".table-sortable thead").disableSelection();


//     $("#add_row").trigger("click");
// }); -->


/////clone///

<script>
  var cindex =1;
$(".tr_clone_add").live('click', function() { 
    var $tr    = $(this).closest('.tr_clone'); 
    var newClass='newClass'; 
    var $clone = $tr.clone().addClass(newClass); 
    $clone.find(':text').val(); 
    // $clone.attr('id', 'id'+ 1);
    $tr.after($clone); 
});
</script>

////////elementmethod///

<!-- <script src="myjquery/jquery-3.3.1.min.js"></script> -->

 <!-- <script type="text/javascript">
    $(document).ready(function(){ 
      $('.tr_clone_add').click(function(e){
      user_id =e.target.id;
       console.log(user_id)
      element =$('.'+user_id);
       console.log(element)
      duplicate=element.clone();
       console.log(duplicate)
      $(duplicate).insertAfter(element);
      });
    });

</script> -->



<script>
  var cindex =1;
  var regex = /^(.*)(\d)+$/i; 
$(".tr_clone_add").live('click', function() { 
    var $tr    = $(this).closest('.tr_clone'); 

    var $clone = $tr.clone(true); 
    cindex++; 
    $clone.find(':text').val(); 
    $clone.attr('id', 'id'+(cindex) ); //update row id if required 
    //update ids of elements in row 
    $clone.find("*").each(function() { 
            var id = this.id || ""; 
            var match = id.match(regex) || []; 
            if (match.length == 3) { 
                this.id = match[1] + (cindex); 
            } 
    }); 
    var newClass='newClass'; 
    var $clone = $tr.clone().addClass(newClass); 
    $clone.find(':text').val(); 
    // $clone.attr('id', 'id'+ 1);
    $tr.after($clone); 
});
</script>